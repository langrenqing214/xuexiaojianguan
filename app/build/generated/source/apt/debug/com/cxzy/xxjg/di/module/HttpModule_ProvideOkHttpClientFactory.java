// Generated by Dagger (https://google.github.io/dagger).
package com.cxzy.xxjg.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.OkHttpClient;

public final class HttpModule_ProvideOkHttpClientFactory implements Factory<OkHttpClient.Builder> {
  private final HttpModule module;

  public HttpModule_ProvideOkHttpClientFactory(HttpModule module) {
    this.module = module;
  }

  @Override
  public OkHttpClient.Builder get() {
    return Preconditions.checkNotNull(
        module.provideOkHttpClient(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static HttpModule_ProvideOkHttpClientFactory create(HttpModule module) {
    return new HttpModule_ProvideOkHttpClientFactory(module);
  }

  public static OkHttpClient.Builder proxyProvideOkHttpClient(HttpModule instance) {
    return Preconditions.checkNotNull(
        instance.provideOkHttpClient(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
