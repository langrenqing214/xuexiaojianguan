// Generated by Dagger (https://google.github.io/dagger).
package com.cxzy.xxjg.base;

import dagger.MembersInjector;
import javax.inject.Provider;

public final class BaseFragment_MembersInjector<T1 extends BaseContract.BasePresenter>
    implements MembersInjector<BaseFragment<T1>> {
  private final Provider<T1> mPresenterProvider;

  public BaseFragment_MembersInjector(Provider<T1> mPresenterProvider) {
    this.mPresenterProvider = mPresenterProvider;
  }

  public static <T1 extends BaseContract.BasePresenter> MembersInjector<BaseFragment<T1>> create(
      Provider<T1> mPresenterProvider) {
    return new BaseFragment_MembersInjector<T1>(mPresenterProvider);
  }

  @Override
  public void injectMembers(BaseFragment<T1> instance) {
    injectMPresenter(instance, mPresenterProvider.get());
  }

  public static <T1 extends BaseContract.BasePresenter> void injectMPresenter(
      BaseFragment<T1> instance, T1 mPresenter) {
    instance.mPresenter = mPresenter;
  }
}
